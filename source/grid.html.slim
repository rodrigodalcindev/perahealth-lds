---
body_class: "is-grid"
---

- columns = [{number: 1, class: 12}, {number: 2, class: 6}, {number: 3, class: 4}, {number: 4, class: 3}, {number: 6, class: 2}, {number: 12, class: 1}]

h1 Layout Grid

section.mtl
  .g-container
    - columns.each do |column|
      .g-row.mbm
        - column[:number].times do
          div class="g-col-#{column[:class]}"
            .b-column
              code
                = "g-col-#{column[:class]}"

section.mtl
  h2.mbm Specifications

  .g-row
    = code('sass') do
      - design_token("grid").each do |prop|
        = "$#{prop.name}: #{prop.name == 'grid-columns' ? prop.value : 'rem(' + prop.value.to_s + ')'} \n"

section.mtl
  h2.mbm Usage

  .g-row
    .g-col-6
      p.mbxs
        | Layout grid is based on the <a href="http://neat.bourbon.io/" target="_blank">Neat framework</a>. Adding the list of output grid variables from Theo will automatically override the framework's default values.

  .g-row
    .g-col-6
      h4.mtm.mbxs Responsiveness

      p.mbm
        | The grid is fluid by default, with a basic <code>$mobile</code> breakpoint set to determine the stacking of columns.

  .g-row
    = code('sass') do
      |
        @for $i from 1 through $grid-columns
          .g-col-\#{$i}
            @include span-columns($i)

            @include media($mobile)
              @include span-columns($grid-columns)